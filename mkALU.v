//
// Generated by Bluespec Compiler, version 2012.01.A (build 26572, 2012-01-17)
//
// On Fri Feb 27 13:54:38 GMT 2015
//
// Method conflict info:
// Method: calc
// Conflict-free: calc
//
//
// Ports:
// Name                         I/O  size props
// calc                           O    32
// RDY_calc                       O     1 const
// CLK                            I     1 unused
// RST_N                          I     1 unused
// calc_op1                       I    32
// calc_op2                       I    32
// calc_fun                       I     3
//
// Combinational paths from inputs to outputs:
//   (calc_op1, calc_op2, calc_fun) -> calc
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
`define BSV_ASSIGNMENT_DELAY
`endif

module mkALU(CLK,
	     RST_N,

	     calc_op1,
	     calc_op2,
	     calc_fun,
	     calc,
	     RDY_calc);
  input  CLK;
  input  RST_N;

  // value method calc
  input  [31 : 0] calc_op1;
  input  [31 : 0] calc_op2;
  input  [2 : 0] calc_fun;
  output [31 : 0] calc;
  output RDY_calc;

  // signals for module outputs
  reg [31 : 0] calc;
  wire RDY_calc;

  // remaining internal signals
  wire [31 : 0] result__h31,
		result__h36,
		result__h41,
		result__h46,
		result__h51;

  // value method calc
  always@(calc_fun or
	  result__h31 or
	  result__h36 or result__h41 or result__h46 or result__h51)
  begin
    case (calc_fun)
      3'd0: calc = result__h31;
      3'd1: calc = result__h36;
      3'd2: calc = result__h41;
      3'd3: calc = result__h46;
      3'd4: calc = result__h51;
      default: calc = 32'd0;
    endcase
  end
  assign RDY_calc = 1'd1 ;

  // remaining internal signals
  assign result__h31 = calc_op1 & calc_op2 ;
  assign result__h36 = calc_op1 | calc_op2 ;
  assign result__h41 = calc_op1 ^ calc_op2 ;
  assign result__h46 = calc_op1 + calc_op2 ;
  assign result__h51 = calc_op1 - calc_op2 ;
endmodule  // mkALU

